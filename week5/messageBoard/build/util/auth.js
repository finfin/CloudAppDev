/*! MessageBoard 28-06-2013 */
var LocalAPIKeyStrategy,LocalStrategy,User,authenticateAPIKey,ensureAdmin,ensureAuthenticated,mongoose,passport,util;passport=require("passport"),util=require("util"),LocalStrategy=require("passport-local").Strategy,LocalAPIKeyStrategy=require("passport-localapikey").Strategy,mongoose=require("mongoose"),User=mongoose.model("User"),passport.serializeUser(function(a,b){return b(null,a.id)}),passport.deserializeUser(function(a,b){return User.findById(a,function(a,c){return b(a,c)})}),passport.use(new LocalStrategy(function(a,b,c){return User.findOne({name:a},function(a,d){return a?c(a):d?d.comparePassword(b,function(a,b){return a?c(a):b?c(null,d):c(null,!1,{message:"Invalid username or password"})}):c(null,!1,{message:"Invalid username or password"})})})),passport.use(new LocalAPIKeyStrategy(function(a,b){return User.findOne({apikey:a},function(a,c){return a?b(a):c?b(null,c):b(null,!1)})})),exports.ensureAuthenticated=ensureAuthenticated=function(a,b,c){return a.isAuthenticated()&&a.user.enabled?c():b.redirect("/logout")},exports.authenticateAPIKey=authenticateAPIKey=function(a,b,c){passport.authenticate("localapikey",function(d,e){return d?b.send(403):e?a.logIn(e,function(a){return console.log("user:"+e.name+" login"),a?c(a):c()}):b.send(403)})(a,b,c)},exports.ensureAdmin=ensureAdmin=function(a,b,c){return a.user&&a.user.enabled&&a.user.admin===!0?c():b.send(403)},exports.ensureSelfOrAdmin=function(a,b,c){return name=a.params.name,a.user&&a.user.enabled&&(a.user.admin===!0||a.user.name===name)?c():b.send(403)};